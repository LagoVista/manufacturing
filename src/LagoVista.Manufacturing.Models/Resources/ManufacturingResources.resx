<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Common_CreatedBy" xml:space="preserve">
    <value>Created By</value>
  </data>
  <data name="Common_CreationDate" xml:space="preserve">
    <value>Creation Date</value>
  </data>
  <data name="Common_UniqueId" xml:space="preserve">
    <value>System Id</value>
  </data>
  <data name="Common_LastUpdated" xml:space="preserve">
    <value>Last Updated</value>
  </data>
  <data name="Common_LastUpdatedBy" xml:space="preserve">
    <value>Last Updated By</value>
  </data>
  <data name="Common_Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="Common_Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="Common_Key" xml:space="preserve">
    <value>Key</value>
  </data>
  <data name="Common_Key_Help" xml:space="preserve">
    <value>The key is used to identify this item in scripts and must be unique with respect to it's parent. One a key has been assigned, it can not be changed.</value>
  </data>
  <data name="Common_Key_Validation" xml:space="preserve">
    <value>The key must 1) begin with a lower case letter, 2) contain only lower case letters and numbers, and 3) must be between 3 and 50 characters.</value>
  </data>
  <data name="Common_IsPublic" xml:space="preserve">
    <value>Is Public</value>
  </data>
  <data name="Common_IsRequired" xml:space="preserve">
    <value>Is Required</value>
  </data>
  <data name="Common_Note" xml:space="preserve">
    <value>Note</value>
  </data>
  <data name="Common_Notes" xml:space="preserve">
    <value>Notes</value>
  </data>
  <data name="Common_ValidationErrors" xml:space="preserve">
    <value>Validation Errors</value>
  </data>
  <data name="Common_IsValid" xml:space="preserve">
    <value>Is Valid</value>
  </data>
  <data name="Common_PageNumberOne" xml:space="preserve">
    <value>Page 1</value>
  </data>
  <data name="Common_Resources" xml:space="preserve">
    <value>Resources</value>
  </data>
  <data name="Common_Icon" xml:space="preserve">
    <value>Icon</value>
  </data>
  <data name="Common_Category" xml:space="preserve">
    <value>Category</value>
  </data>
  <data name="Common_SelectCategory" xml:space="preserve">
    <value>-select category-</value>
  </data>
  <data name="Component_Title" xml:space="preserve">
    <value>Component</value>
    <comment>Component</comment>
  </data>
  <data name="Component_Description" xml:space="preserve">
    <value>A component is part that can be used to assemble a PCB or device</value>
  </data>
  <data name="ComponentPackage_TItle" xml:space="preserve">
    <value>Component Package</value>
  </data>
  <data name="ComponentPackage_Description" xml:space="preserve">
    <value>A component package is the physical package that makes up a component.</value>
  </data>
  <data name="Component_Room" xml:space="preserve">
    <value>Room</value>
  </data>
  <data name="Component_ShelfUnit" xml:space="preserve">
    <value>Shelving Unit</value>
  </data>
  <data name="Component_VendorLink" xml:space="preserve">
    <value>Vendor Link</value>
  </data>
  <data name="Component_MfgPartNumb" xml:space="preserve">
    <value>Manufacturer Part Number</value>
  </data>
  <data name="Component_DataSheet" xml:space="preserve">
    <value>Datasheet Link</value>
  </data>
  <data name="Component_Value" xml:space="preserve">
    <value>Value</value>
  </data>
  <data name="Component_Attr1" xml:space="preserve">
    <value>Attribute 1</value>
  </data>
  <data name="Component_Attr2" xml:space="preserve">
    <value>Attribute 2</value>
  </data>
  <data name="Component_Bin" xml:space="preserve">
    <value>Bin</value>
  </data>
  <data name="Component_Shelf" xml:space="preserve">
    <value>Shelf</value>
  </data>
  <data name="Component_ComponentType" xml:space="preserve">
    <value>Component Type</value>
  </data>
  <data name="Component_PackageType" xml:space="preserve">
    <value>Package Type</value>
  </data>
  <data name="Component_QuantityOnHand" xml:space="preserve">
    <value>Quantity On Hand</value>
  </data>
  <data name="Component_Cost" xml:space="preserve">
    <value>Cost</value>
  </data>
  <data name="Component_ExtendedPrice" xml:space="preserve">
    <value>Extended Price</value>
  </data>
  <data name="Component_PartNumber" xml:space="preserve">
    <value>Part Number</value>
  </data>
  <data name="ComponentPackage_PackageId" xml:space="preserve">
    <value>Package Id</value>
  </data>
  <data name="ComponentPackage_PartWidth" xml:space="preserve">
    <value>Part Width (mm)</value>
  </data>
  <data name="ComponentPackage_PartHeight" xml:space="preserve">
    <value>Part Height (mm)</value>
  </data>
  <data name="ComponentPackage_TapeWidth" xml:space="preserve">
    <value>Tape Width (mm)</value>
  </data>
  <data name="ComponentPackage_Rotation" xml:space="preserve">
    <value>Rotation (angle)</value>
  </data>
  <data name="ComponentPackage_SpacingX" xml:space="preserve">
    <value>Spacing X (mm)</value>
  </data>
  <data name="ComponentPackage_HoleSpacing" xml:space="preserve">
    <value>Hole Spacing (mm)</value>
  </data>
  <data name="ComponentPackage_CenterX" xml:space="preserve">
    <value>Center X (mm)</value>
  </data>
  <data name="ComponentPackage_CenterX_Help" xml:space="preserve">
    <value>Center X from reference hole</value>
  </data>
  <data name="ComponentPackage_CenterY" xml:space="preserve">
    <value>Center Y (mm)</value>
  </data>
  <data name="ComponentPackage_CenterY_Help" xml:space="preserve">
    <value>Center Y from the reference hole in the tape</value>
  </data>
  <data name="ComponentPackage_SpecificationPage" xml:space="preserve">
    <value>Specification Page</value>
  </data>
  <data name="ComponentPackage_PartLength" xml:space="preserve">
    <value>Part Length (mm)</value>
  </data>
  <data name="CompomentPurchase_Title" xml:space="preserve">
    <value>Component Purchase</value>
  </data>
  <data name="ComponentPurchase_OrderNumber" xml:space="preserve">
    <value>Order Number</value>
  </data>
  <data name="ComponentPurchase_Vendor" xml:space="preserve">
    <value>Vendor</value>
  </data>
  <data name="ComponentPurchase_Quantity" xml:space="preserve">
    <value>Quantity</value>
  </data>
  <data name="ComponentPurchase_OrderDate" xml:space="preserve">
    <value>Order Date</value>
  </data>
  <data name="ComponentPurchase_Description" xml:space="preserve">
    <value>Records of purchased components</value>
    <comment>Records that identify purchased components</comment>
  </data>
  <data name="ComponentPurchase_Title" xml:space="preserve">
    <value>Component Purchase</value>
  </data>
  <data name="PartType_ThroughHole" xml:space="preserve">
    <value>Through Hole</value>
  </data>
  <data name="PartType_SurfaceMount" xml:space="preserve">
    <value>Surface Mount</value>
  </data>
  <data name="PartType_Hardware" xml:space="preserve">
    <value>Hardware</value>
  </data>
  <data name="ComponentPackage_PartType" xml:space="preserve">
    <value>Package Type</value>
  </data>
  <data name="ComponentPackage_PartType_Select" xml:space="preserve">
    <value>-select package type-</value>
  </data>
  <data name="Component_QuantityOnOrder" xml:space="preserve">
    <value>Quantity On Order</value>
  </data>
  <data name="Component_ComponentType_Select" xml:space="preserve">
    <value>-select component type-</value>
  </data>
  <data name="Component_PartPack" xml:space="preserve">
    <value>Part Pack</value>
  </data>
  <data name="Component_Row" xml:space="preserve">
    <value>Row</value>
  </data>
  <data name="Component_Feeder" xml:space="preserve">
    <value>Feeder</value>
  </data>
  <data name="Component_Feeder_Select" xml:space="preserve">
    <value>-select feeder-</value>
  </data>
  <data name="Feeders_Title" xml:space="preserve">
    <value>Feeders</value>
  </data>
  <data name="Feeder_Description" xml:space="preserve">
    <value>A feeder is a device that provides parts for a pick and place machine.</value>
  </data>
  <data name="Feeder_Title" xml:space="preserve">
    <value>Feeder</value>
  </data>
  <data name="PartPacks_Title" xml:space="preserve">
    <value>Part Packs</value>
  </data>
  <data name="PartPack_Description" xml:space="preserve">
    <value>Part Packs are strip feeders with identified parts on board.</value>
  </data>
  <data name="PartPack_Title" xml:space="preserve">
    <value>Part Pack</value>
  </data>
  <data name="StripFeeder_Title" xml:space="preserve">
    <value>Strip Feeder</value>
  </data>
  <data name="StripFeeder_Description" xml:space="preserve">
    <value>A strip feeder is a container for components where a tape is installed, each part is picked in a new location based on how many parts are in the strip</value>
  </data>
  <data name="StripFeeders_Title" xml:space="preserve">
    <value>Strip Feeders</value>
  </data>
  <data name="PickAndPlaceJob_Title" xml:space="preserve">
    <value>Pick and Place Job</value>
  </data>
  <data name="PackAndPlace_Description" xml:space="preserve">
    <value>A Pick and Place job has the parameters for a job that should be run on a pick and place machine</value>
  </data>
  <data name="StripFeederRow_Title" xml:space="preserve">
    <value>Strip Feeder Row</value>
  </data>
  <data name="StripFeederRow_Description" xml:space="preserve">
    <value>A row within a strip feeder</value>
  </data>
  <data name="Machine_Title" xml:space="preserve">
    <value>Machine</value>
  </data>
  <data name="Machine_Description" xml:space="preserve">
    <value>Machine are XY, GCode based such as a Pick and Place Machine, a Laser Cutter or CNC Machine</value>
  </data>
  <data name="Machines_Title" xml:space="preserve">
    <value>Machines</value>
  </data>
  <data name="Pcb_Title" xml:space="preserve">
    <value>Printed Circuit Board</value>
  </data>
  <data name="Pcbs_Title" xml:space="preserve">
    <value>Printed Circuit Boards</value>
  </data>
  <data name="Pcb_Description" xml:space="preserve">
    <value>Printed circuit boards are electronic components </value>
  </data>
  <data name="Pcb_Revision" xml:space="preserve">
    <value>Revision</value>
  </data>
  <data name="Pcb_Variant" xml:space="preserve">
    <value>Variant</value>
  </data>
  <data name="Pcb_Revision_BoardFile" xml:space="preserve">
    <value>Board File</value>
  </data>
  <data name="Pcb_Revision_Description" xml:space="preserve">
    <value>A circuit board revision is a version of a board with a specific layout and component set.</value>
  </data>
  <data name="Pcb_Revision_RevisionTimeStamp" xml:space="preserve">
    <value>Revision Time Stamp YYYY-MM-DD</value>
  </data>
  <data name="Pcb_Revision_SchematicFile" xml:space="preserve">
    <value>Schematic File</value>
  </data>
  <data name="Pcb_Revision_SchematicPdFile" xml:space="preserve">
    <value>Schematic PDF File</value>
  </data>
  <data name="Pcb_Revision_Title" xml:space="preserve">
    <value>Circuit Board Revision</value>
  </data>
  <data name="Pcb_Variant_Description" xml:space="preserve">
    <value>A variant is a spec for building a board with a specific set of components on it.  A board may have more components than it needs.</value>
  </data>
  <data name="Pfb_Revision_Revision" xml:space="preserve">
    <value>Revision  (X.X.X)</value>
  </data>
  <data name="Pcb_Revisions" xml:space="preserve">
    <value>Revisions</value>
  </data>
  <data name="Pcb_Revision_BomFile" xml:space="preserve">
    <value>BOM File</value>
  </data>
  <data name="Pcb_Sku" xml:space="preserve">
    <value>Sku</value>
  </data>
  <data name="Pcb_Variants" xml:space="preserve">
    <value>Variants</value>
  </data>
  <data name="Pcb_Variant_Sku" xml:space="preserve">
    <value>Variant Sku</value>
  </data>
  <data name="ComponentOrder_Title" xml:space="preserve">
    <value>Order</value>
  </data>
  <data name="ComponentOrders_TitleString" xml:space="preserve">
    <value>Orders</value>
  </data>
  <data name="ComponentOrder_OrderDate" xml:space="preserve">
    <value>Order Date</value>
  </data>
  <data name="ComponentOrder_ReceiveDate" xml:space="preserve">
    <value>Receive Date</value>
  </data>
  <data name="ComponentOrderLineItem_Title" xml:space="preserve">
    <value>Line Item</value>
  </data>
  <data name="ComponentOrderLineItem_Help" xml:space="preserve">
    <value>A lineitem of an order</value>
  </data>
  <data name="ComponentOrderLineItem_UnitPrice" xml:space="preserve">
    <value>Unit Price</value>
  </data>
  <data name="ComponentOrderLineItem_SupplierPartNumber" xml:space="preserve">
    <value>Supplier Part Number</value>
  </data>
  <data name="ComponentOrderLineItem_MfgPartNumber" xml:space="preserve">
    <value>Mfg Part Number</value>
  </data>
  <data name="ComponentOrderLineItem_Backordered" xml:space="preserve">
    <value>Backordered</value>
  </data>
  <data name="ComponentOrder_Description" xml:space="preserve">
    <value>An order of parts from a supplier</value>
  </data>
  <data name="ComponentOrder_LineItems" xml:space="preserve">
    <value>Line Items</value>
  </data>
  <data name="ComponentOrder_Total" xml:space="preserve">
    <value>Total</value>
  </data>
  <data name="ComponentOrder_Shipping" xml:space="preserve">
    <value>Shipping</value>
  </data>
  <data name="ComponentOrder_SubTotal" xml:space="preserve">
    <value>Sub Total</value>
  </data>
  <data name="ComponentOrder_Tax" xml:space="preserve">
    <value>Tax</value>
  </data>
  <data name="ComponentOrder_Supplier" xml:space="preserve">
    <value>Supplier</value>
  </data>
  <data name="ComponentOrder_SupplierOrderNumber" xml:space="preserve">
    <value>Supplier Order Number</value>
  </data>
  <data name="ComponentOrderStatusTypes_Pending" xml:space="preserve">
    <value>Pending</value>
  </data>
  <data name="ComponentOrderStatusTypes_Ordered" xml:space="preserve">
    <value>Ordered</value>
  </data>
  <data name="ComponentOrderStatusTypes_Received" xml:space="preserve">
    <value>Received</value>
  </data>
  <data name="ComponentOrderStatusTypes_Stocked" xml:space="preserve">
    <value>Stocked</value>
  </data>
  <data name="Common_Status" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="Common_Status_Select" xml:space="preserve">
    <value>-select status-</value>
  </data>
  <data name="ComponentOrders_Title" xml:space="preserve">
    <value>Orders</value>
  </data>
  <data name="ComponentOrderLineItem_Component" xml:space="preserve">
    <value>Component</value>
  </data>
  <data name="ComponentOrderLineItem_Component_Select" xml:space="preserve">
    <value>-select component-</value>
  </data>
  <data name="Common_Quantity" xml:space="preserve">
    <value>Quantity</value>
  </data>
  <data name="ComponentOrder_LineItemCsv" xml:space="preserve">
    <value>Line Item CSV</value>
  </data>
  <data name="ComponentPackage_TapePitch" xml:space="preserve">
    <value>Tape Pitch</value>
  </data>
  <data name="ComponentPackage_TapePitch_Select" xml:space="preserve">
    <value>-select tape pitch-</value>
  </data>
  <data name="ComponentPackage_TapeRotation" xml:space="preserve">
    <value>Tape Rotation</value>
  </data>
  <data name="ComponentPackage_TapeRotation_Select" xml:space="preserve">
    <value>-select tape rotation-</value>
  </data>
  <data name="ComponentPackage_TapeSize" xml:space="preserve">
    <value>Tape Size</value>
  </data>
  <data name="ComponentPackage_TapeSize_Select" xml:space="preserve">
    <value>-select tape size-</value>
  </data>
  <data name="TapePitch_12" xml:space="preserve">
    <value>12mm</value>
  </data>
  <data name="TapePitch_16" xml:space="preserve">
    <value>16mm</value>
  </data>
  <data name="TapePitch_2" xml:space="preserve">
    <value>2mm</value>
  </data>
  <data name="TapePitch_20" xml:space="preserve">
    <value>20mm</value>
  </data>
  <data name="TapePitch_24" xml:space="preserve">
    <value>24mm</value>
  </data>
  <data name="TapePitch_28" xml:space="preserve">
    <value>28mm</value>
  </data>
  <data name="TapePitch_32" xml:space="preserve">
    <value>32mm</value>
  </data>
  <data name="TapePitch_4" xml:space="preserve">
    <value>4mm</value>
  </data>
  <data name="TapePitch_8" xml:space="preserve">
    <value>8mm</value>
  </data>
  <data name="TapeRotation_0" xml:space="preserve">
    <value>0 degrees</value>
  </data>
  <data name="TapeRotation_180" xml:space="preserve">
    <value>180 degrees</value>
  </data>
  <data name="TapeRotation_90" xml:space="preserve">
    <value>90 degrees</value>
  </data>
  <data name="TapeRotation_Minus90" xml:space="preserve">
    <value>-90 degrees</value>
  </data>
  <data name="TapeSize_12" xml:space="preserve">
    <value>12mm</value>
  </data>
  <data name="TapeSize_16" xml:space="preserve">
    <value>16mm</value>
  </data>
  <data name="TapeSize_20" xml:space="preserve">
    <value>20mm</value>
  </data>
  <data name="TapeSize_24" xml:space="preserve">
    <value>24mm</value>
  </data>
  <data name="TapeSize_32" xml:space="preserve">
    <value>32mm</value>
  </data>
  <data name="TapeSize_44" xml:space="preserve">
    <value>44mm</value>
  </data>
  <data name="TapeSize_8" xml:space="preserve">
    <value>8mm</value>
  </data>
  <data name="Component_SupplierPartNumb" xml:space="preserve">
    <value>Supplier Part Number</value>
  </data>
  <data name="Component_Supplier" xml:space="preserve">
    <value>Supplier</value>
  </data>
  <data name="ComponentOrderLineItem_Received" xml:space="preserve">
    <value>Received</value>
  </data>
  <data name="ComponentOrderLineItem_Received_Help" xml:space="preserve">
    <value>Has this item been put into inventory.</value>
  </data>
  <data name="Common_QuantityBackOrdered" xml:space="preserve">
    <value>Quantity Back Ordered</value>
  </data>
  <data name="Common_QuantityOrdered" xml:space="preserve">
    <value>Quantity Ordered</value>
  </data>
  <data name="Common_QuantityReceived" xml:space="preserve">
    <value>Quantity Received</value>
  </data>
  <data name="ComponentOrder_Tariff" xml:space="preserve">
    <value>Tariff</value>
  </data>
  <data name="ComponentAttributes_Title" xml:space="preserve">
    <value>Component Attributes</value>
  </data>
  <data name="ComponentAttribute_Description" xml:space="preserve">
    <value>A component attribute is a component specific value that describes the part such as resistance, capacitance and so on.</value>
  </data>
  <data name="Component_Attributes" xml:space="preserve">
    <value>Attributes</value>
  </data>
  <data name="Common_Value" xml:space="preserve">
    <value>Value</value>
  </data>
  <data name="ComponentPackage_TapeAndReelSpecImage" xml:space="preserve">
    <value>Tape and Reel Specification Image</value>
  </data>
  <data name="ComponentPackage_TapeAndReelActualImage" xml:space="preserve">
    <value>Tape and Reel Actual Image</value>
  </data>
  <data name="ComponentPackage_Verified" xml:space="preserve">
    <value>Verified</value>
  </data>
  <data name="ComponentPackage_Verified_Help" xml:space="preserve">
    <value>Has this package been verifed correct</value>
  </data>
  <data name="NozzleTip_Title" xml:space="preserve">
    <value>Nozzle Tip</value>
  </data>
  <data name="NozzleTips_Title" xml:space="preserve">
    <value>Nozzle Tips</value>
  </data>
  <data name="NozzleTip_Description" xml:space="preserve">
    <value>A nozzle tip is an attachment that goes on a pick and place head that will place parts, there are difference sizes to allow picking up differnet size components</value>
  </data>
  <data name="NozzleTip_InnerDiameter" xml:space="preserve">
    <value>Innert Diameter</value>
  </data>
  <data name="NozzleTip_OuterDiameter" xml:space="preserve">
    <value>Outer Diameter</value>
  </data>
</root>